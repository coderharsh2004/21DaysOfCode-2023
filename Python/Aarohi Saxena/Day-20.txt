#Answer-1
def bubble_sort(numbers):
    n = len(numbers)
    for i in range(n):
        swapped = False

        for j in range(0, n-i-1):
            if numbers[j] > numbers[j+1]:
                numbers[j], numbers[j+1] = numbers[j+1], numbers[j]
                swapped = True

        if not swapped:
            break

if __name__ == "__main__":
    input_list = [64, 34, 25, 12, 22, 11, 90]
    print("Original List:", input_list)

    bubble_sort(input_list)

    print("Sorted List:", input_list)


#Answer-2
def merge_sort_descending(arr):
    if len(arr) <= 1:
        return arr

    mid = len(arr) // 2
    left_half = arr[:mid]
    right_half = arr[mid:]

    left_half = merge_sort_descending(left_half)
    right_half = merge_sort_descending(right_half)

    return merge_descending(left_half, right_half)


def merge_descending(left, right):
    result = []
    i, j = 0, 0

    while i < len(left) and j < len(right):
        if left[i] >= right[j]:
            result.append(left[i])
            i += 1
        else:
            result.append(right[j])
            j += 1

    result += left[i:]
    result += right[j:]

    return result

if __name__ == "__main__":
    unsorted_list = [38, 27, 43, 3, 9, 82, 10]
    sorted_list = merge_sort_descending(unsorted_list)
    print("Original list:", unsorted_list)
    print("Sorted list (descending):", sorted_list)

